name: "Release"

on:
  push:
    tags: ["v*.*.*"]

env:
  SOLUTION_FILE_PATH: .
  MOD_NAME: "SongData"
  OUTPUT_FILE_DIR: .\dist\Release\mods
  OUTPUT_FILE_PATH: .\dist\Release\mods\SongData\SongData.dll

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  id-token: write
  contents: write
  packages: write
  pull-requests: read

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: "Checkout source code"
      uses: actions/checkout@v3

    - name: "Add MSBuild to PATH"
      uses: microsoft/setup-msbuild@v1.1

    - name: "Build"
      working-directory: "${{env.GITHUB_WORKSPACE}}"
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 ${{env.SOLUTION_FILE_PATH}}

    - name: "ZIP artifacts"
      uses: vimtor/action-zip@v1
      with:
        files: ${{env.OUTPUT_FILE_DIR}}
        dest: ${{env.MOD_NAME}}_${{github.ref_name}}.zip
        recursive: true

    - name: "Create release"
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        files: ${{env.MOD_NAME}}_${{github.ref_name}}.zip
      id: automatic_releases
